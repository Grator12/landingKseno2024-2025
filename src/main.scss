@use "scss/typography";
@forward "scss/theme";
@use "scss/adaptive/phone";
@use "scss/adaptive/tablet";
@use "scss/adaptive/variables";
@use 'sass:math';
@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200");
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;600;700&display=swap");

$breakpoint-tablet: variables.$breakpoint-tablet;
$breakpoint-phone: variables.$breakpoint-phone;
$breakpoint-content: 1133px; // 1440 - 156 * 2;

$spacing-min: 16px;
$spacing-max: 32px;
$offset-max: 100px;

$content-column-size: math.div($breakpoint-content - 11 * $spacing-max, 12);

$breakpoint-content-min: $breakpoint-content + $spacing-max * 2;
$breakpoint-content-max: $breakpoint-content-min + $offset-max * 2;

@mixin beforeForHover() {
  content: '';
  position: absolute;
  inset: 0;
  opacity: var(--_state-layer-opacity, 0);
  background-color: currentColor;
  z-index: -1;
  transition: 0.3s opacity;
  border-radius: inherit;
}

html, body {
  margin: 0;
}

@layer main, tablet, phone;

@layer tablet {
  @include tablet.tablet;
}

@layer phone {
  @include phone.phone;
}

body {
  --offset: 0px;
  --columns: 4;
  --spacing: #{$spacing-min};
  --column-size: 1fr;
  font-family: "Roboto", sans-serif;
  min-height: 100dvh;
  background-color: var(--md-sys-color-background);
  display: grid;
  grid-template-columns: [container-start] var(--offset) [content-start] repeat(var(--columns), var(--column-size)) [content-end] var(--offset) [container-end];
  min-width: 340px;
  column-gap: var(--spacing);
  /* 14px â†’ 22px */
  //font-size: clamp(0.875rem, 0.6799rem + 0.9756vw, 1.375rem);
  @media(min-width: $breakpoint-phone) {
    --columns: 8;
    --spacing: #{$spacing-max};
  }

  @media(min-width: $breakpoint-tablet) {
    --columns: 12;
    --navigation-column-start: 9;
  }

  @media(min-width: $breakpoint-content-min) {
    --offset: 1fr;
    --column-size: #{$content-column-size};
  }

  @media(min-width: $breakpoint-content-max) {
    --offset: auto;
    // --offset: #{$offset-max};
    --column-size: #{$content-column-size}; //1fr
  }
}

* {
  box-sizing: border-box;
}


@layer main {
  .main-container {
    grid-column: content;
    display: grid;
    grid-auto-rows: min-content;
    grid-auto-flow: row;

    grid-template-columns: subgrid;
    max-width: 1440px;
  }

  .hero-section {
    height: 100dvh;
    display: grid;
    grid-template-columns: subgrid;
    grid-column: 1 / -1;
    color: var(--md-sys-color-on-primary);

    &__info {
      grid-column: span calc(var(--columns) / 2);

      &__button {
        margin-top: 112px;
        width: 100%;
      }
    }

    &__description {
      &__name {
        @include typography.display-large;
        margin-block: 16px;
      }

      &__about {
        @include typography.headline-large;
      }
    }
  }

  .header {
    display: grid;
    //flex-direction: row;
    //justify-content: space-between;
    align-items: center;
    height: 100px;
    grid-column: 1 / -1;
    grid-template-columns: subgrid;
    color: var(--md-sys-color-on-primary);

    &__logo {
      height: 48px;
      grid-column: span 2;

      svg {
        width: 100%;
        height: 100%;
      }
    }

    &__nav {

      grid-column-end: -1;

      @include typography.title-large;

      ul {
        list-style: none;
        padding: 0;
        display: flex;
        //flex-direction: row;
        justify-content: space-between;

      }


    }
  }

  .material-symbols-outlined {
    font-variation-settings: 'FILL' var(--icon-fill, 0),
    'wght' 400,
    'GRAD' 0,
    'opsz' 24;

    .navigation-list__button.active & {
      --icon-fill: 1;
    }

    transition: font-variation-settings 0.3s;
  }
}

.button {
  background-color: var(--md-sys-color-primary);
  border-radius: 16px;
  box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.15), 0 1px 2px 0 rgba(0, 0, 0, 0.3);
  display: grid;
  place-items: center;
  height: 100px;
  cursor: pointer;
  border: none;
  padding: 0;
  @include typography.display-medium;
}